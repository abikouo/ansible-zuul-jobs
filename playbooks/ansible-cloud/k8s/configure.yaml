---
- hosts: all
  tasks:
    - name: Ensure controller directory exists
      file:
        path: "{{ ansible_user_dir }}/zuul-output/logs/controller"
        state: directory

    - name: Run ensure-virtualenv role
      include_role:
        name: ensure-docker

    - debug: var=result

    - tempfile:
        state: directory
        suffix: .cluster
      register: _cluster_dir

    - block:
        - name: Install Kind
          ansible.builtin.get_url:
            url: "https://kind.sigs.k8s.io/dl/{{ kind_release }}/kind-linux-amd64"
            dest: '{{ kind_path }}'
          become: true

        - name: Install Kubectl
          ansible.builtin.get_url:
            url: "https://dl.k8s.io/release/{{ kubectl_release }}/bin/linux/amd64/kubectl"
            dest: '{{ kubectl_path }}'
          register: result
          until: result is not failed
          retries: 3
          delay: 60
          become: true

        - name: Make Kind as executable
          ansible.builtin.file:
            path: '{{ item }}'
            mode: '0755'
          become: true
          with_items:
            - "{{ kind_path }}"
            - "{{ kubectl_path }}"

        - name: Create cluster
          command: "sudo {{ kind_path }} create cluster"

        - name: Display authorized keys content
          command: "cat ~/.kube/config"
          ignore_errors: true
          register: result

        - name: Run ensure-virtualenv role
          include_role:
            name: ensure-virtualenv

        - name: Run ensure-pip role
          include_role:
            name: ensure-pip

        - name: Setup base virtualenv_options
          set_fact:
            _virtualenv_options: "--python python{{ ansible_test_python }}"

        - name: Ensure pip temp directory exists in /var/tmp
          file:
            state: directory
            path: /var/tmp/ansible-test-pip

        - name: Create virtualenv for ansible-test
          shell: "virtualenv {{ _virtualenv_options }} {{ ansible_test_venv_path }}"

        - name: Upgrade pip
          shell: "{{ ansible_test_venv_path }}/bin/pip install --upgrade pip"

        - name: Install Ansible into virtualenv
          environment:
            ANSIBLE_SKIP_CONFLICT_CHECK: 1
            TMPDIR: /var/tmp/ansible-test-pip
          shell: "{{ ansible_test_venv_path }}/bin/pip install {{ ansible_user_dir }}/{{ zuul.projects['github.com/ansible/ansible'].src_dir }}"

        - name: Fetch and install the artifacts
          import_role:
            name: deploy-artifacts

        - name: Install collection dependencies
          pip:
            name:
              - yamllint
              - kubernetes
              - flake8
              - jsonpatch
            virtualenv: '{{ ansible_test_venv_path }}'
            virtualenv_python: python3

        - name: get cluster information
          k8s_cluster_info:
          register: _info
          ansible_python_interpreter: "{{ ansible_test_venv_path }}/bin/python"

      vars:
        kind_release: "v0.15.0"
        kind_path: '{{ _cluster_dir.path }}/kind'
        kubectl_release: "v1.25.2"
        kubectl_path: '{{ _cluster_dir.path }}/kubectl'
