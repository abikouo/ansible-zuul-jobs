---
- name: Deploy kubernetes cluster on appliance
  hosts: appliance-ssh
  gather_facts: false
  tasks:
    - name: Run ensure-docker role
      import_role:
        name: ensure-docker

    - name: Install Kubernetes cluster
      import_role:
        name: setup-kind
      vars:
        kind_host_public_ip: "{{ hostvars['kubernetes']['nodepool']['interface_ip']}}"

    - name: Fetch Kube config from cluster
      fetch:
        src: "~/.kube/config"
        dest: "{{ zuul.executor.work_root }}/config"
        flat: true

- name: Configure controller
  hosts: controller
  tasks:
    - name: Ensure controller directory exists
      file:
        path: "{{ ansible_user_dir }}/zuul-output/logs/controller"
        state: directory

    - name: Run ensure-virtualenv role
      include_role:
        name: ensure-virtualenv

    - name: Run ensure-pip role
      include_role:
        name: ensure-pip

    - name: Setup base virtualenv_options
      set_fact:
        _virtualenv_options: "--python python{{ ansible_test_python }}"

    - name: Create virtualenv for ansible-test
      shell: "virtualenv {{ _virtualenv_options }} {{ ansible_test_venv_path }}"

    - name: Upgrade pip
      shell: "{{ ansible_test_venv_path }}/bin/pip install --upgrade pip"

    - name: Install SELinux Python bindings using yum
      yum:
        name: libselinux-python3
        state: present
      become: true

    - name: Install Ansible into virtualenv
      shell: "{{ ansible_test_venv_path }}/bin/pip install {{ ansible_user_dir }}/{{ zuul.projects['github.com/ansible/ansible'].src_dir }} 'jinja2<3.0.0'"
      environment:
        ANSIBLE_SKIP_CONFLICT_CHECK: 1

    - name: Fetch and install the artifacts
      import_role:
        name: deploy-artifacts

    - name: Install molecule and collection dependencies
      pip:
        name:
          - molecule
          - yamllint
          - kubernetes
          - flake8
          - jsonpatch
        virtualenv: '{{ ansible_test_venv_path }}'
        virtualenv_python: python3

    - name: Create kube config directory
      file:
        path: "~/.kube"
        state: directory

    - name: Upload config file
      copy:
        src: "{{ zuul.executor.work_root }}/config"
        dest: "~/.kube/config"
