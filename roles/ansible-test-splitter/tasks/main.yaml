---
- block:
    - name: Create temporary directory for tests
      tempfile:
        state: directory
        suffix: .splitter
      register: _result

    - set_fact:
        venv_path: "{{ _result.path }}/env"
        executable_path: "{{ _result.path }}/list_changed_targets.py"

    - name: Create virtual env with required libraries
      pip:
        name:
          - PyGithub
          - PyYAML
          - AST
        virtualenv: "{{ venv_path }}"
        virtualenv_command: "virtualenv --python python3"
        virtualenv_site_packages: true

    - copy:
        src: list_changed_targets.py
        dest: "{{ executable_path }}"
        mode: '0700'

    - set_fact:
        splitter_cmd: >
          {{ venv_path }}/bin/python {{ executable_path }}
          --branch {{ zuul.branch }}
          {% if ansible_test_splitter__releases_to_test is defined %}--ansible-releases {{ ansible_test_splitter__releases_to_test | join(' ') }}{% endif %}
          {% if ansible_test_splitter__total_job is defined %}--total-job {{ ansible_test_splitter__total_job }}{% endif %}
          {% if ansible_test_splitter__test_changed|bool %}--test-changed{% else %}--test-all-the-targets{% endif %}
          {{ ansible_test_splitter__check_for_changes_in | join(' ') }}
          --github_project_name {{ ansible_test_splitter__project_name }}
          --github_pull_request_number {{ ansible_test_splitter__pull_request }}

    - name: Will split up the jobs with the following command
      debug:
        msg: "{{ splitter_cmd }}"

    - name: Split up the workload
      command: "{{ splitter_cmd }}"
      register: _result

    - set_fact:
        for_zuul_return: '{{ _result.stdout | from_json }}'

    - debug: var=for_zuul_return

    - name: Return the result to Zuul
      zuul_return:
        data: "{{ for_zuul_return.data }}"

  always:
    - name: Delete temporary file
      file:
        state: absent
        path: "{{ _result.path }}"
      ignore_errors: true
